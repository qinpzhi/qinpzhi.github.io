(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{313:function(v,e,i){"use strict";i.r(e);var o=i(14),t=Object(o.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"jvm参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jvm参数"}},[v._v("#")]),v._v(" JVM参数")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("-Xss")]),v._v(" ：置线程的最大栈空间，栈的大小直接决定了函数调用的最大可达深度。")]),v._v(" "),e("li",[e("code",[v._v("-Xms")]),v._v(" 用来表示堆的起始内存，等价于 "),e("code",[v._v("-XX:InitialHeapSize")]),v._v("（默认为物理内存的1/64）。")]),v._v(" "),e("li",[e("code",[v._v("-Xmx")]),v._v(" 用来表示堆的最大内存，等价于 "),e("code",[v._v("-XX:MaxHeapSize")]),v._v("（默认为物理内存的1/4）。")]),v._v(" "),e("li",[e("code",[v._v("–XX:NewRatio")]),v._v(" 来配置新生代和老年代的比例(默认是1:2) -XX:NewRatio=2，新生代占1，老年代占2。")]),v._v(" "),e("li",[e("code",[v._v("-XX:SurvivorRatio")]),v._v(" 来配置Eden:Surivor，比如-XX:SurvivorRatio=8，代表 Eden:From Survivor:To Survivor=8:1:1。")]),v._v(" "),e("li",[e("code",[v._v("-XX:MaxTenuringThreashold=<N>")]),v._v("进行设置去老年代所需要达到的标记次数，默认是15次。")]),v._v(" "),e("li",[e("code",[v._v("-XX:+PrintGCDetails")]),v._v(":输出详细的GC处理日志\n"),e("ul",[e("li",[v._v("打印gc简要信息：① -xx:+printGC ② -verbose:gc")])])])])])}),[],!1,null,null,null);e.default=t.exports}}]);